{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Louis\\\\Desktop\\\\demoviewer\\\\client\\\\src\\\\pages\\\\WatchPage.js\";\nimport React from 'react';\nimport { Button, Jumbotron, Container, Col, Row, Image } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './WatchPage.css';\n\nclass PlaybackArea extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      tp: 0,\n      dot: {\n        x: 0,\n        y: 0\n      }\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const x0 = 535,\n          y0 = -527;\n    const xg0 = -520,\n          yg0 = -984;\n    const k = 0.2;\n    setInterval(() => {\n      if (this.props.game != null) {\n        let playerPos = this.props.game.rounds[5].player_positions; //for(let i in playerPos){\n\n        if (this.state.tp < playerPos[95].position_points.length) {\n          let xg = playerPos[95].position_points[this.state.tp].position.x;\n          let yg = playerPos[95].position_points[this.state.tp].position.y;\n          let x = x0 + (xg - xg0) * k;\n          let y = y0 + (yg - yg0) * k;\n          console.log(x, y);\n          this.setState({\n            dot: {\n              x: x,\n              y: y\n            },\n            tp: this.state.tp + 1\n          });\n        } else {\n          return alert(\"Finished Round\");\n        } // }\n\n      }\n    }, 33);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"dot\",\n      style: {\n        \"left\": this.state.dot.x,\n        \"bottom\": this.state.dot.y\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PlaybackArea, {\n      game: this.props.game,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nfunction WatchPage(props) {\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Game, {\n    game: props.game,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default WatchPage;","map":{"version":3,"sources":["C:/Users/Louis/Desktop/demoviewer/client/src/pages/WatchPage.js"],"names":["React","Button","Jumbotron","Container","Col","Row","Image","PlaybackArea","Component","constructor","props","state","tp","dot","x","y","componentDidMount","render","x0","y0","xg0","yg0","k","setInterval","game","playerPos","rounds","player_positions","position_points","length","xg","position","yg","console","log","setState","alert","Game","WatchPage"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Button, Jumbotron, Container, Col, Row, Image} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './WatchPage.css';\r\n\r\n\r\nclass PlaybackArea extends React.Component{\r\n    constructor(props){\r\n        super();\r\n        this.state={\r\n            tp: 0,\r\n            dot: {\r\n                x:0, \r\n                y:0\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n    }\r\n\r\n\r\n    render(){\r\n        const x0 = 535, y0 = -527;\r\n        const xg0 = -520, yg0 = -984;\r\n        const k = 0.2;\r\n\r\n        setInterval(()=>{\r\n            if(this.props.game != null){\r\n                let playerPos = this.props.game.rounds[5].player_positions;\r\n                \r\n                \r\n                //for(let i in playerPos){\r\n                    if(this.state.tp < playerPos[95].position_points.length){\r\n                        let xg = playerPos[95].position_points[this.state.tp].position.x;\r\n                        let yg = playerPos[95].position_points[this.state.tp].position.y;\r\n                        let x = x0 + (xg-xg0)*k;\r\n                        let y = y0 + (yg-yg0)*k;\r\n\r\n                        console.log(x,y);\r\n                        this.setState({dot:{x:x,y:y}, tp: this.state.tp+1});\r\n                        \r\n                    }else{\r\n                        return alert(\"Finished Round\");\r\n                    }\r\n               // }\r\n\r\n                \r\n            }    \r\n        },33);\r\n       \r\n        return(\r\n            <div>\r\n                <div id=\"map\">\r\n                    <div class =\"dot\" style = {{\"left\": this.state.dot.x, \"bottom\": this.state.dot.y}}/>\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component{\r\n    constructor(props){\r\n        super();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Jumbotron>\r\n                <PlaybackArea game={this.props.game}/>\r\n            </Jumbotron>\r\n        );\r\n    }\r\n}\r\n\r\nfunction WatchPage(props){\r\n    return(\r\n        <Container>\r\n            <Game game={props.game}/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default WatchPage;\r\n"]},"metadata":{},"sourceType":"module"}