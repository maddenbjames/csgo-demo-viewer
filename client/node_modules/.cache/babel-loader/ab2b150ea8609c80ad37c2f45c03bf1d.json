{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Louis\\\\Desktop\\\\demoviewer\\\\client\\\\src\\\\pages\\\\WatchPage.js\";\nimport React, { useEffect, useRef } from 'react';\nimport { Button, Jumbotron, Container, Col, Row, Image } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './WatchPage.css';\nimport json from './123.json';\n\nclass PlaybackArea extends React.Component {\n  constructor(props) {\n    super();\n\n    this.useInterval = (callback, delay) => {\n      const savedCallback = useRef(); // Remember the latest callback.\n\n      useEffect(() => {\n        savedCallback.current = callback;\n      }, [callback]); // Set up the interval.\n\n      useEffect(() => {\n        function tick() {\n          savedCallback.current();\n        }\n\n        if (delay !== null) {\n          let id = setInterval(tick, delay);\n          return () => clearInterval(id);\n        }\n      }, [delay]);\n    };\n\n    this.state = {\n      hist: {\n        t: 0,\n        dotPositions: []\n      }\n    };\n  }\n\n  render() {\n    const x0 = 535,\n          y0 = -527;\n    const xg0 = -520,\n          yg0 = -984;\n    const k = 0.2;\n    const drawDots = this.state.hist.dotPositions.map(position => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"dot\",\n        style: {\n          \"left\": position.x,\n          \"bottom\": position.y\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 20\n        }\n      });\n    });\n    useInterval(() => {\n      if (this.props.game != null && this.state.hist.t < this.props.game.rounds[5].player_positions.length) {\n        let players = this.props.game.rounds[5].player_positions[this.state.hist.t].players;\n        let newHist = {\n          t: this.state.hist.t + 1,\n          dotPositions: []\n        };\n\n        for (const i in players) {\n          if (players[i].position != null) {\n            // checks if player is still alive\n            let xg = players[i].position.x;\n            let yg = players[i].position.y;\n            let x = x0 + (xg - xg0) * k;\n            let y = y0 + (yg - yg0) * k;\n            newHist.dotPositions.push({\n              x,\n              y\n            });\n          }\n        }\n\n        this.setState({\n          hist: newHist\n        });\n      }\n\n      console.log(\"tick\");\n    }, 33);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, drawDots));\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PlaybackArea, {\n      game: this.props.game,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nfunction WatchPage(props) {\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Game, {\n    game: json,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default WatchPage;","map":{"version":3,"sources":["C:/Users/Louis/Desktop/demoviewer/client/src/pages/WatchPage.js"],"names":["React","useEffect","useRef","Button","Jumbotron","Container","Col","Row","Image","json","PlaybackArea","Component","constructor","props","useInterval","callback","delay","savedCallback","current","tick","id","setInterval","clearInterval","state","hist","t","dotPositions","render","x0","y0","xg0","yg0","k","drawDots","map","position","x","y","game","rounds","player_positions","length","players","newHist","i","xg","yg","push","setState","console","log","Game","WatchPage"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef} from 'react';\r\nimport { Button, Jumbotron, Container, Col, Row, Image} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './WatchPage.css';\r\nimport json from './123.json';\r\n\r\n\r\n\r\nclass PlaybackArea extends React.Component{\r\n    constructor(props){\r\n        super();\r\n        this.state={\r\n            hist: {\r\n                t: 0,\r\n                dotPositions: []\r\n            }\r\n        }\r\n    }\r\n\r\n    useInterval = (callback, delay)=> {\r\n        const savedCallback = useRef();\r\n      \r\n        // Remember the latest callback.\r\n        useEffect(() => {\r\n          savedCallback.current = callback;\r\n        }, [callback]);\r\n      \r\n        // Set up the interval.\r\n        useEffect(() => {\r\n          function tick() {\r\n            savedCallback.current();\r\n          }\r\n          if (delay !== null) {\r\n            let id = setInterval(tick, delay);\r\n            return () => clearInterval(id);\r\n          }\r\n        }, [delay]);\r\n    }\r\n    \r\n    render(){\r\n        const x0 = 535, y0 = -527;\r\n        const xg0 = -520, yg0 = -984;\r\n        const k = 0.2;\r\n\r\n        const drawDots = this.state.hist.dotPositions.map(position=>{\r\n            return <div class =\"dot\" style = {{\"left\": position.x, \"bottom\": position.y}}/>\r\n        });\r\n\r\n        \r\n\r\n        useInterval(()=>{\r\n            if(this.props.game != null && this.state.hist.t < this.props.game.rounds[5].player_positions.length){\r\n                let players = this.props.game.rounds[5].player_positions[this.state.hist.t].players;\r\n\r\n                let newHist = {\r\n                    t: this.state.hist.t + 1,\r\n                    dotPositions: []\r\n                }\r\n                \r\n                for(const i in players){\r\n                    if(players[i].position != null){     // checks if player is still alive\r\n                        let xg = players[i].position.x;\r\n                        let yg = players[i].position.y;\r\n                        let x = x0 + (xg-xg0)*k;\r\n                        let y = y0 + (yg-yg0)*k;\r\n\r\n                        newHist.dotPositions.push({x,y});\r\n                    }\r\n                }\r\n\r\n                this.setState({hist: newHist});\r\n            }\r\n            console.log(\"tick\");   \r\n        },33);\r\n\r\n        \r\n        return(\r\n            <div>\r\n                <div id=\"map\">\r\n                    {drawDots}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component{\r\n    constructor(props){\r\n        super();\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Jumbotron>\r\n                <PlaybackArea game={this.props.game}/>\r\n            </Jumbotron>\r\n        );\r\n    }\r\n}\r\n\r\nfunction WatchPage(props){\r\n    return(\r\n        <Container>\r\n            <Game game={json}/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default WatchPage;\r\n"]},"metadata":{},"sourceType":"module"}