{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Louis\\\\Desktop\\\\demoviewer\\\\client\\\\src\\\\pages\\\\WatchPage.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Button, Jumbotron, Container, Col, Row, Image } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './WatchPage.css';\nimport json from './123.json';\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef(); // Remember the latest callback.\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]); // Set up the interval.\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nfunction PlaybackArea(props) {\n  const [hist, setHist] = useState({\n    t: 0,\n    dotPositions: []\n  });\n  const x0 = 535,\n        y0 = -527;\n  const xg0 = -520,\n        yg0 = -984;\n  const k = 0.2;\n  const drawDots = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 22\n    }\n  });\n  useEffect(() => {\n    drawDots = hist.dotPositions.map(position => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"dot\",\n        style: {\n          \"left\": position.x,\n          \"bottom\": position.y\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 20\n        }\n      });\n    });\n  });\n  useInterval(() => {\n    if (props.game != null && hist.t < props.game.rounds[5].player_positions.length) {\n      let players = props.game.rounds[5].player_positions[hist.t].players;\n      let newHist = {\n        t: hist + 1,\n        dotPositions: []\n      };\n\n      for (const i in players) {\n        if (players[i].position != null) {\n          // checks if player is still alive\n          let xg = players[i].position.x;\n          let yg = players[i].position.y;\n          let x = x0 + (xg - xg0) * k;\n          let y = y0 + (yg - yg0) * k;\n          newHist.dotPositions.push({\n            x,\n            y\n          });\n        }\n      }\n\n      setHist(newHist);\n    }\n\n    console.log(\"tick\");\n  }, 33);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, drawDots));\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PlaybackArea, {\n      game: this.props.game,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nfunction WatchPage(props) {\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Game, {\n    game: json,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default WatchPage;","map":{"version":3,"sources":["C:/Users/Louis/Desktop/demoviewer/client/src/pages/WatchPage.js"],"names":["React","useEffect","useRef","useState","Button","Jumbotron","Container","Col","Row","Image","json","useInterval","callback","delay","savedCallback","current","tick","id","setInterval","clearInterval","PlaybackArea","props","hist","setHist","t","dotPositions","x0","y0","xg0","yg0","k","drawDots","map","position","x","y","game","rounds","player_positions","length","players","newHist","i","xg","yg","push","console","log","Game","Component","constructor","render","WatchPage"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\r\nimport { Button, Jumbotron, Container, Col, Row, Image} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './WatchPage.css';\r\nimport json from './123.json';\r\n\r\n\r\nfunction useInterval(callback, delay){\r\n    const savedCallback = useRef();\r\n  \r\n    // Remember the latest callback.\r\n    useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n  \r\n    // Set up the interval.\r\n    useEffect(() => {\r\n      function tick() {\r\n        savedCallback.current();\r\n      }\r\n      if (delay !== null) {\r\n        let id = setInterval(tick, delay);\r\n        return () => clearInterval(id);\r\n      }\r\n    }, [delay]);\r\n}\r\n\r\nfunction PlaybackArea(props){\r\n    const [hist, setHist] = useState({t: 0, dotPositions: []});\r\n    const x0 = 535, y0 = -527;\r\n    const xg0 = -520, yg0 = -984;\r\n    const k = 0.2;\r\n    const drawDots = <div/>;\r\n\r\n    useEffect(()=>{\r\n        drawDots = hist.dotPositions.map(position=>{\r\n            return <div class =\"dot\" style = {{\"left\": position.x, \"bottom\": position.y}}/>\r\n        });\r\n    })\r\n\r\n    useInterval(()=>{\r\n        if(props.game != null && hist.t < props.game.rounds[5].player_positions.length){\r\n            let players = props.game.rounds[5].player_positions[hist.t].players;\r\n\r\n            let newHist = {\r\n                t: hist + 1,\r\n                dotPositions: []\r\n            }\r\n            \r\n            for(const i in players){\r\n                if(players[i].position != null){     // checks if player is still alive\r\n                    let xg = players[i].position.x;\r\n                    let yg = players[i].position.y;\r\n                    let x = x0 + (xg-xg0)*k;\r\n                    let y = y0 + (yg-yg0)*k;\r\n\r\n                    newHist.dotPositions.push({x,y});\r\n                }\r\n            }\r\n\r\n            setHist(newHist);\r\n        }\r\n        console.log(\"tick\");   \r\n    },33);\r\n\r\n    return(\r\n        <div>\r\n            <div id=\"map\">\r\n                {drawDots}\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nclass Game extends React.Component{\r\n    constructor(props){\r\n        super();\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Jumbotron>\r\n                <PlaybackArea game={this.props.game}/>\r\n            </Jumbotron>\r\n        );\r\n    }\r\n}\r\n\r\nfunction WatchPage(props){\r\n    return(\r\n        <Container>\r\n            <Game game={json}/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default WatchPage;\r\n"]},"metadata":{},"sourceType":"module"}